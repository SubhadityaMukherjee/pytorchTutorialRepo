{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n\n/**\n * An object which represents an abstract keyboard layout.\n */\nexport\ninterface IKeyboardLayout {\n  /**\n   * The human readable name of the layout.\n   *\n   * This value is used primarily for display and debugging purposes.\n   */\n  readonly name: string;\n\n  /**\n   * Get an array of all key values supported by the layout.\n   *\n   * @returns A new array of the supported key values.\n   *\n   * #### Notes\n   * This can be useful for authoring tools and debugging, when it's\n   * necessary to know which keys are available for shortcut use.\n   */\n  keys(): string[];\n\n  /**\n   * Test whether the given key is a valid value for the layout.\n   *\n   * @param key - The user provided key to test for validity.\n   *\n   * @returns `true` if the key is valid, `false` otherwise.\n   */\n  isValidKey(key: string): boolean;\n\n  /**\n   * Get the key for a `'keydown'` event.\n   *\n   * @param event - The event object for a `'keydown'` event.\n   *\n   * @returns The associated key value, or an empty string if the event\n   *   does not represent a valid primary key.\n   */\n  keyForKeydownEvent(event: KeyboardEvent): string;\n}\n\n\n/**\n * Get the global application keyboard layout instance.\n *\n * @returns The keyboard layout for use by the application.\n *\n * #### Notes\n * The default keyboard layout is US-English.\n */\nexport\nfunction getKeyboardLayout(): IKeyboardLayout {\n  return Private.keyboardLayout;\n}\n\n\n/**\n * Set the global application keyboard layout instance.\n *\n * @param - The keyboard layout for use by the application.\n *\n * #### Notes\n * The keyboard layout should typically be set on application startup\n * to a layout which is appropriate for the user's system.\n */\nexport\nfunction setKeyboardLayout(layout: IKeyboardLayout): void {\n  Private.keyboardLayout = layout;\n}\n\n\n/**\n * A concrete implementation of [[IKeyboardLayout]] based on keycodes.\n *\n * The `keyCode` property of a `'keydown'` event is a browser and OS\n * specific representation of the physical key (not character) which\n * was pressed on a keyboard. While not the most convenient API, it\n * is currently the only one which works reliably on all browsers.\n *\n * This class accepts a user-defined mapping of keycode to key, which\n * allows for reliable shortcuts tailored to the user's system.\n */\nexport\nclass KeycodeLayout implements IKeyboardLayout {\n  /**\n   * Construct a new keycode layout.\n   *\n   * @param name - The human readable name for the layout.\n   *\n   * @param codes - A mapping of keycode to key value.\n   */\n  constructor(name: string, codes: KeycodeLayout.CodeMap) {\n    this.name = name;\n    this._codes = codes;\n    this._keys = KeycodeLayout.extractKeys(codes);\n  }\n\n  /**\n   * The human readable name of the layout.\n   */\n  readonly name: string;\n\n  /**\n   * Get an array of the key values supported by the layout.\n   *\n   * @returns A new array of the supported key values.\n   */\n  keys(): string[] {\n    return Object.keys(this._keys);\n  }\n\n  /**\n   * Test whether the given key is a valid value for the layout.\n   *\n   * @param key - The user provided key to test for validity.\n   *\n   * @returns `true` if the key is valid, `false` otherwise.\n   */\n  isValidKey(key: string): boolean {\n    return key in this._keys;\n  }\n\n  /**\n   * Get the key for a `'keydown'` event.\n   *\n   * @param event - The event object for a `'keydown'` event.\n   *\n   * @returns The associated key value, or an empty string if\n   *   the event does not represent a valid primary key.\n   */\n  keyForKeydownEvent(event: KeyboardEvent): string {\n    return this._codes[event.keyCode] || '';\n  }\n\n  private _keys: KeycodeLayout.KeySet;\n  private _codes: KeycodeLayout.CodeMap;\n}\n\n\n/**\n * The namespace for the `KeycodeLayout` class statics.\n */\nexport\nnamespace KeycodeLayout {\n  /**\n   * A type alias for a keycode map.\n   */\n  export\n  type CodeMap = { readonly [code: number]: string };\n\n  /**\n   * A type alias for a key set.\n   */\n  export\n  type KeySet = { readonly [key: string]: boolean };\n\n  /**\n   * Extract the set of keys from a code map.\n   *\n   * @param code - The code map of interest.\n   *\n   * @returns A set of the keys in the code map.\n   */\n  export\n  function extractKeys(codes: CodeMap): KeySet {\n    let keys: any = Object.create(null);\n    for (let c in codes) {\n      keys[codes[c]] = true;\n    }\n    return keys as KeySet;\n  }\n}\n\n\n/**\n * A keycode-based keyboard layout for US English keyboards.\n *\n * This layout is valid for the following OS/Browser combinations.\n *\n * - Windows\n *   - Chrome\n *   - Firefox\n *   - IE\n *\n * - OSX\n *   - Chrome\n *   - Firefox\n *   - Safari\n *\n * - Linux\n *   - Chrome\n *   - Firefox\n *\n * Other combinations may also work, but are untested.\n */\nexport\nconst EN_US: IKeyboardLayout = new KeycodeLayout('en-us', {\n  8: 'Backspace',\n  9: 'Tab',\n  13: 'Enter',\n  19: 'Pause',\n  27: 'Escape',\n  32: 'Space',\n  33: 'PageUp',\n  34: 'PageDown',\n  35: 'End',\n  36: 'Home',\n  37: 'ArrowLeft',\n  38: 'ArrowUp',\n  39: 'ArrowRight',\n  40: 'ArrowDown',\n  45: 'Insert',\n  46: 'Delete',\n  48: '0',\n  49: '1',\n  50: '2',\n  51: '3',\n  52: '4',\n  53: '5',\n  54: '6',\n  55: '7',\n  56: '8',\n  57: '9',\n  59: ';',  // firefox\n  61: '=',  // firefox\n  65: 'A',\n  66: 'B',\n  67: 'C',\n  68: 'D',\n  69: 'E',\n  70: 'F',\n  71: 'G',\n  72: 'H',\n  73: 'I',\n  74: 'J',\n  75: 'K',\n  76: 'L',\n  77: 'M',\n  78: 'N',\n  79: 'O',\n  80: 'P',\n  81: 'Q',\n  82: 'R',\n  83: 'S',\n  84: 'T',\n  85: 'U',\n  86: 'V',\n  87: 'W',\n  88: 'X',\n  89: 'Y',\n  90: 'Z',\n  93: 'ContextMenu',\n  96: '0',   // numpad\n  97: '1',   // numpad\n  98: '2',   // numpad\n  99: '3',   // numpad\n  100: '4',  // numpad\n  101: '5',  // numpad\n  102: '6',  // numpad\n  103: '7',  // numpad\n  104: '8',  // numpad\n  105: '9',  // numpad\n  106: '*',  // numpad\n  107: '+',  // numpad\n  109: '-',  // numpad\n  110: '.',  // numpad\n  111: '/',  // numpad\n  112: 'F1',\n  113: 'F2',\n  114: 'F3',\n  115: 'F4',\n  116: 'F5',\n  117: 'F6',\n  118: 'F7',\n  119: 'F8',\n  120: 'F9',\n  121: 'F10',\n  122: 'F11',\n  123: 'F12',\n  173: '-',  // firefox\n  186: ';',  // non-firefox\n  187: '=',  // non-firefox\n  188: ',',\n  189: '-',  // non-firefox\n  190: '.',\n  191: '/',\n  192: '`',\n  219: '[',\n  220: '\\\\',\n  221: ']',\n  222: '\\''\n});\n\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * The global keyboard layout instance.\n   */\n  export\n  let keyboardLayout = EN_US;\n}\n"],"names":["KeycodeLayout"],"mappings":"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"}